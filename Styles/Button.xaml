<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <Style x:Key="BtnStyle"
           TargetType="RadioButton">

        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0,5,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border x:Name="border"
                            Height="50"
                            Width="228"
                            BorderThickness="0">

                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground"
                                             Color="#272B2F" />
                        </Border.Background>

                        <Grid>

                            <Border x:Name="Indicator"
                                    Height="35"
                                    Width="4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="#FFFFFF"
                                    Visibility="Collapsed"
                                    CornerRadius="2" />

                            <ContentPresenter />

                        </Grid>
                        
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />

                        </Trigger>

                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                      SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#272B2F"
                                                    To="#3E434A"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                            
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave"
                                      SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#3E434A"
                                                    To="#272B2F"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                            
                        </EventTrigger>

                        <Trigger Property="IsChecked"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#212529" />

                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />

                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <ImageBrush x:Key="close_app_def"
                ImageSource="/Images/shutdown_def.png"
                Stretch="None" />

    <ImageBrush x:Key="close_app_mo"
                ImageSource="/Images/shutdown_mo.png"
                Stretch="None" />

    <Style x:Key="ExitApp" TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Margin"
                Value="0,15,15,0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource close_app_def}">

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_app_mo}" />

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_app_mo}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>


    <Style x:Key="SettingsApp" TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>

    </Style>

    <Style x:Key="BTN_BACK" TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="50" />
        <Setter Property="Width"
                Value="50" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Bottom" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="YellowGreen"/>
        <Setter Property="BorderThickness" Value="0"/>

    </Style>
    
    <Style x:Key="BTN_FORWARD" TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="50" />
        <Setter Property="Width"
                Value="50" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="YellowGreen"/>
        <Setter Property="BorderThickness" Value="0"/>

    </Style>


    <Style x:Key="BTN_SUCCESS" TargetType="{x:Type Button}">

        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="GreenYellow"/>
        <Setter Property="Foreground" Value="Black"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Padding="10" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E59400" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BTN_SEARCH" TargetType="{x:Type Button}">

        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="GreenYellow"/>
        <Setter Property="Foreground" Value="Black"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Padding="3" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E59400" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ICONS_ROTATE_360" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Setter Property="Foreground" Value="#FAED27"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Click">
                <BeginStoryboard>
                    <Storyboard TargetProperty="RenderTransform.Angle">
                        <DoubleAnimation   
                        From="0" To="180" Duration="0:0:0.05"   
                        AutoReverse="True"  
                        FillBehavior="Stop" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    
                    <Storyboard TargetProperty="RenderTransform.Angle">
                        <DoubleAnimation   
                        From="0" To="90" Duration="0:0:1.05"   
                        AutoReverse="True"  
                        FillBehavior="Stop" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ICONS_ROTATE_35" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FAED27"/>
        <Setter Property="Margin" Value="55,-25,0,0"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Opacity">
                        <DoubleAnimation   
                          From="1" To="0.2" Duration="0:0:0.9"   
                          AutoReverse="True"  
                          RepeatBehavior="Forever" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Opacity">
                        <DoubleAnimation   
                         To="1" Duration="0:0:0.2"   
                         AutoReverse="False" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            
            
        </Style.Triggers>
    </Style>



    <Style TargetType="RadioButton" x:Key="CircleCheckboxFL">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Content" Value=""></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Ellipse x:Name="E_Filling" Margin="1.5" StrokeThickness="1.5" Stroke="#0A0C0D">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#FF474E51"/>
                                    <GradientStop Offset="0.2" Color="#FF474E51"/>
                                    <GradientStop Offset="1" Color="#FF737A7D"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse x:Name="E_Outline" Stroke="#6A6E71" StrokeThickness="1.5"/>
                        <Ellipse x:Name="E_Bloom" Margin="2.5" Opacity="1" StrokeThickness="1" Stroke="#FF3700" Visibility="Hidden">
                            <Ellipse.Effect>
                                <BlurEffect Radius="3"></BlurEffect>
                            </Ellipse.Effect>
                        </Ellipse>
                        <Ellipse x:Name="E_Flare" Margin="3.5" StrokeThickness="0.7">
                            <Ellipse.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00000000" Offset="0.402"/>
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="#A9A9A9A9" Offset="0.076"/>
                                    <GradientStop Color="#35353535" Offset="0.275"/>
                                </LinearGradientBrush>
                            </Ellipse.OpacityMask>
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                    <GradientStop Color="#EE858C8F" Offset="0"/>
                                    <GradientStop Color="#EE858C8F" Offset="0.4"/>
                                    <GradientStop Color="#858C8F" Offset="0.5"/>
                                    <GradientStop Color="#EE858C8F" Offset="0.6"/>
                                    <GradientStop Color="#EE858C8F" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                        <Ellipse Margin="9" x:Name="E_MinMargin" />
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="E_Filling" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#FFEA6038"/>
                                        <GradientStop Offset="0.2" Color="#FFEA6038"/>
                                        <GradientStop Offset="1" Color="#FFFDEACA"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="E_Flare" Property="Stroke">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#EEF0906A" Offset="0"/>
                                        <GradientStop Color="#EEFEFCDD" Offset="0.4"/>
                                        <GradientStop Color="#FEFCDD" Offset="0.5"/>
                                        <GradientStop Color="#EEFEFCDD" Offset="0.6"/>
                                        <GradientStop Color="#EEF0906A" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="E_Bloom" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    
</ResourceDictionary>